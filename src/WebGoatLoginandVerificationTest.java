
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.hamcrest.CoreMatchers.*;
import static org.hamcrest.MatcherAssert.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class WebGoatLoginandVerificationTest {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@Before
	public void setUp() throws MalformedURLException {
		driver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), new ChromeOptions());
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void webGoatLoginandVerification() {
		driver.get("http://127.0.0.1:8080/WebGoat/login");
		System.out.println("Trying to log in as invalid user ");
		driver.findElement(By.id("exampleInputEmail1")).click();
		driver.findElement(By.id("exampleInputEmail1")).sendKeys("123");
		driver.findElement(By.id("exampleInputPassword1")).click();
		driver.findElement(By.id("exampleInputPassword1")).sendKeys("123");
		driver.findElement(By.cssSelector(".btn")).click();
		vars.put("errorMsg", "Invalid username and password.");
		assertThat(driver.findElement(By.xpath("//section[@id=\'main-content\']/div/p")).getText(),
				is("vars.get(\"errorMsg\").toString()"));
		System.out.println("Error message displayed ");
		driver.findElement(By.id("exampleInputEmail1")).sendKeys("root123");
		driver.findElement(By.id("exampleInputPassword1")).click();
		driver.findElement(By.id("exampleInputPassword1")).sendKeys("matthew");
		driver.findElement(By.cssSelector(".btn")).click();
		driver.findElement(By.cssSelector(".fa-user")).click();
		assertThat(driver.findElement(By.cssSelector(".disabled:nth-child(3) span")).getText(), is("root123"));
		driver.findElement(By.cssSelector(".fa-user")).click();
		assertThat(driver.getTitle(), is("WebGoat"));
		driver.findElement(By.cssSelector(".fa-bar-chart-o")).click();
		
		{
			List<WebElement> elements = driver.findElements(By.id("lesson-title"));
			assert (elements.size() > 0);
		}
		
		{
			List<WebElement> elements = driver.findElements(By.id("Introduction"));
			assert (elements.size() > 0);
		}
		
		driver.findElement(By.cssSelector(".fa-user")).click();
		driver.findElement(By.linkText("Logout")).click();
		System.out.println("User has log out successfully ");
		driver.close();
	}
}
